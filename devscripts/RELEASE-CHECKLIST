0. Run full test suite in all branches. Continue if all tests passed.

1. Run devscripts/prerelease $NEW_TAG.

1a. The script checks out the release branch ('maint' for a bug-fix
    release, 'master' for minor or major release) and calls editor; update
    version, the list of contributors, the list of changes and download URL
    in ANNOUNCE.rst; copy the list of changes from ANNOUNCE.rst to
    LATEST-CHANGES.rst; if it is a stable release - edit docs/news.rst to
    set release date. Edit Version.py and README.rst in the release branch
    - fix versions. Edit section [egg_info] in setup.cfg - set if it is a
    stable or development release. In SetupConfig.py edit "Development
    Status" in trove classifiers; edit dev_tag or download URL: if a
    non-stable version - append 'dev' and date stamp, for a stable version
    remove 'dev' and date stamp). Commit. Verify.

2. Run devscripts/prerelease-tag $NEW_TAG. This checks out the release
   branch and creates the new tag at the head of the release branch. Push
   the branch and the tag to start test/build.

3. Generate new docs using devscripts/build-all-docs. Upload docs using
   devscripts/publish-docs.

4. Run devscripts/postrelease. The script checks out master and null-merge
   maint. The script restores ANNOUNCE.rst from the previous commit
   (HEAD~). It calls editor; update next version, remove the list of
   contributors and the list of changes, edit download URL in ANNOUNCE.rst.
   Edit docs/news.rst - add new version. Edit Version.py and README.rst -
   fix versions. Edit section [egg_info] in setup.cfg. In SetupConfig.py
   edit "Development Status" in trove classifiers; edit dev_tag or download
   URL. Commit. Verify. Fast-forward next to master.

5. Send announcement to the Cheetah mailing list. For a stable release send
   announcements to python and python-announce mailing lists.

6. Announce new release at Wikipedia
   (https://en.wikipedia.org/wiki/CheetahTemplate).
